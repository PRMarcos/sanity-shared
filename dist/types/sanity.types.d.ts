/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */
export type SanityImagePaletteSwatch = {
    _type: "sanity.imagePaletteSwatch";
    background?: string;
    foreground?: string;
    population?: number;
    title?: string;
};
export type SanityImagePalette = {
    _type: "sanity.imagePalette";
    darkMuted?: SanityImagePaletteSwatch;
    lightVibrant?: SanityImagePaletteSwatch;
    darkVibrant?: SanityImagePaletteSwatch;
    vibrant?: SanityImagePaletteSwatch;
    dominant?: SanityImagePaletteSwatch;
    lightMuted?: SanityImagePaletteSwatch;
    muted?: SanityImagePaletteSwatch;
};
export type SanityImageDimensions = {
    _type: "sanity.imageDimensions";
    height?: number;
    width?: number;
    aspectRatio?: number;
};
export type SanityFileAsset = {
    _id: string;
    _type: "sanity.fileAsset";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    source?: SanityAssetSourceData;
};
export type Geopoint = {
    _type: "geopoint";
    lat?: number;
    lng?: number;
    alt?: number;
};
export type Smed = {
    _id: string;
    _type: "smed";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    banner?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    bannerHorizontal?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    smedDescription?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    smedButton?: {
        contentButton?: string;
        linktButton?: string;
    };
};
export type SermonTag = {
    _id: string;
    _type: "sermonTag";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
};
export type SermonSummary = {
    _id: string;
    _type: "sermonSummary";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    date?: string;
    tags?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "sermonTag";
    }>;
    videoUrl?: string;
    speaker?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "person";
    };
    background?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    slug?: Slug;
    content?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    } | {
        _key: string;
    } & Code>;
};
export type Slug = {
    _type: "slug";
    current?: string;
    source?: string;
};
export type Person = {
    _id: string;
    _type: "person";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: string;
    birthDate?: string;
    title?: string;
    titleAbbreviation?: string;
    bio?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    photo?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
};
export type Event = {
    _id: string;
    _type: "event";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    shortDescription?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    banner?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    bannerMobile?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    background?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    about?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    } | {
        _key: string;
    } & Code>;
    schedule?: Array<{
        title?: string;
        date?: string;
        startTime?: string;
        endTime?: string;
        sessions?: Array<{
            title?: string;
            description?: string;
            time?: string;
            _type: "session";
            _key: string;
        }>;
        _type: "daySchedule";
        _key: string;
    }>;
    address?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "address";
    };
    eventColor?: Color;
    teaser?: string;
    speakers?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "person";
    }>;
    organizer?: {
        description?: string;
        phone?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "phoneEntry";
        };
        email?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "emailEntry";
        };
    };
};
export type Header = {
    _id: string;
    _type: "header";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    items?: Array<{
        label?: string;
        link?: string;
        _key: string;
    }>;
    icon?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
};
export type AboutPage = {
    _id: string;
    _type: "aboutPage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    bannerImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
};
export type OurSmedsPage = {
    _id: string;
    _type: "ourSmedsPage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    bannerImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    description?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    } | {
        _key: string;
    } & Code>;
    conclusion?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    } | {
        _key: string;
    } & Code>;
};
export type HomePage = {
    _id: string;
    _type: "homePage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    heroHeadline?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    heroDescription?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
        listItem?: never;
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    heroButtonTitle?: string;
    heroButtonLink?: string;
    heroImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    dividerText?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    titleLive?: string;
    descriptionLive?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }>;
    youtubeUrl?: string;
    buttonLiveText?: string;
    butonLiveLink?: string;
    liveBannerImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
};
export type Footer = {
    _id: string;
    _type: "footer";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    socialLinks?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "socialLink";
    }>;
    logo?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    programmingTitle?: string;
    programmingText?: string;
    helpTitle?: string;
    helpPhone?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "phoneEntry";
    };
    locationTitle?: string;
    address?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "address";
    };
    mapEmbedUrl?: string;
};
export type ContactPage = {
    _id: string;
    _type: "contactPage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    bannerImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    description?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    } | {
        _key: string;
    } & Code>;
    address?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "address";
    };
    DefaultSocial?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "socialLink";
    };
    usefulLink?: {
        label?: string;
        url?: string;
    };
    email?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "emailEntry";
    };
    phone?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "phoneEntry";
    };
    WhatsPhone?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "phoneEntry";
    };
    AvailableHours?: string;
};
export type PhoneEntry = {
    _id: string;
    _type: "phoneEntry";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: string;
    number?: string;
    isWhats?: boolean;
};
export type EmailEntry = {
    _id: string;
    _type: "emailEntry";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: string;
    address?: string;
};
export type SocialLink = {
    _id: string;
    _type: "socialLink";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    socialUserName?: string;
    type?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "supportedSocialMidia";
    };
    url?: string;
};
export type SupportedSocialMidia = {
    _id: string;
    _type: "supportedSocialMidia";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    icon?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
};
export type Address = {
    _id: string;
    _type: "address";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    street?: string;
    number?: string;
    district?: string;
    city?: string;
    state?: string;
    zip?: string;
};
export type SanityImageCrop = {
    _type: "sanity.imageCrop";
    top?: number;
    bottom?: number;
    left?: number;
    right?: number;
};
export type SanityImageHotspot = {
    _type: "sanity.imageHotspot";
    x?: number;
    y?: number;
    height?: number;
    width?: number;
};
export type SanityImageAsset = {
    _id: string;
    _type: "sanity.imageAsset";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    metadata?: SanityImageMetadata;
    source?: SanityAssetSourceData;
};
export type SanityAssetSourceData = {
    _type: "sanity.assetSourceData";
    name?: string;
    id?: string;
    url?: string;
};
export type SanityImageMetadata = {
    _type: "sanity.imageMetadata";
    location?: Geopoint;
    dimensions?: SanityImageDimensions;
    palette?: SanityImagePalette;
    lqip?: string;
    blurHash?: string;
    hasAlpha?: boolean;
    isOpaque?: boolean;
};
export type Code = {
    _type: "code";
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
};
export type Color = {
    _type: "color";
    hex?: string;
    alpha?: number;
    hsl?: HslaColor;
    hsv?: HsvaColor;
    rgb?: RgbaColor;
};
export type RgbaColor = {
    _type: "rgbaColor";
    r?: number;
    g?: number;
    b?: number;
    a?: number;
};
export type HsvaColor = {
    _type: "hsvaColor";
    h?: number;
    s?: number;
    v?: number;
    a?: number;
};
export type HslaColor = {
    _type: "hslaColor";
    h?: number;
    s?: number;
    l?: number;
    a?: number;
};
export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Smed | SermonTag | SermonSummary | Slug | Person | Event | Header | AboutPage | OurSmedsPage | HomePage | Footer | ContactPage | PhoneEntry | EmailEntry | SocialLink | SupportedSocialMidia | Address | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Code | Color | RgbaColor | HsvaColor | HslaColor;
export declare const internalGroqTypeReferenceTo: unique symbol;
export type SmedsPageQueryResult = {
    title: string | null;
    bannerImage: string | null;
    description: Array<{
        _key: string;
    } & Code | {
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }> | null;
    conclusion: Array<{
        _key: string;
    } & Code | {
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }> | null;
} | null;
export type ContactPageQueryResult = {
    _id: string;
    title: string | null;
    bannerImage: string | null;
    description: Array<{
        _key: string;
    } & Code | {
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }> | null;
    address: {
        street: string | null;
        number: string | null;
        district: string | null;
        city: string | null;
        state: string | null;
        zip: string | null;
    } | null;
    phone: string | null;
    email: string | null;
    DefaultSocial: string | null;
    DefaultSocialLink: string | null;
    whatsApp: string | null;
    AvailableHours: string | null;
} | null;
export type EventsPageQueryResult = Array<{
    _id: string;
    title: string | null;
    shortDescription: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    address: string | null;
    schedule: {
        date: string | null;
        startTime: string | null;
        endTime: string | null;
    } | null;
    background: string | null;
}>;
export type FindOneSermonByIdQueryResult = {
    _id: string;
    allTags: Array<{
        _id: string;
        title: string | null;
    }>;
    title: string | null;
    date: string | null;
    slug: string | null;
    background: string | null;
    speaker: {
        name: string | null;
        birthDate: string | null;
        title: string | null;
        titleAbbreviation: string | null;
        biography: null;
        image: string | null;
    } | null;
    tags: Array<{
        _id: string;
        title: string | null;
    }> | null;
    videoLink: string | null;
    content: Array<{
        _key: string;
    } & Code | {
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }> | null;
} | null;
export type FindOneeventsByIdQueryResult = {
    title: string | null;
    about: Array<{
        _key: string;
    } & Code | {
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }> | null;
    shortDescription: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    address: {
        title: string | null;
        street: string | null;
        city: string | null;
        state: string | null;
        zip: string | null;
    } | null;
    banner: string | null;
    bannerMobile: string | null;
    eventColor: string | null;
    organizer: {
        description: string | null;
        phone: {
            number: string | null;
            name: string | null;
        } | null;
        email: {
            address: string | null;
            name: string | null;
        } | null;
    } | null;
    schedule: Array<{
        date: string | null;
        startTime: string | null;
        endTime: string | null;
        sessions: Array<{
            title: string | null;
            description: string | null;
            time: string | null;
        }> | null;
    }> | null;
    background: string | null;
    speakers: Array<{
        name: string | null;
        birthDate: string | null;
        title: string | null;
        titleAbbreviation: string | null;
        bio: Array<{
            children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
            }>;
            style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
        }> | null;
        image: string | null;
    }> | null;
    teaser: string | null;
} | null;
export type FooterQueryResult = {
    logo: string | null;
    programmingTitle: string | null;
    programmingText: string | null;
    helpTitle: string | null;
    helpPhone: string | null;
    locationTitle: string | null;
    socialLinks: Array<{
        _key: string;
        url: string | null;
        plataform: string | null;
        icon: string | null;
    }> | null;
    address: {
        street: string | null;
        number: string | null;
        district: string | null;
        city: string | null;
        state: string | null;
        zip: string | null;
    } | null;
    mapEmbedUrl: string | null;
} | null;
export type GetSmedListQueryResult = Array<{
    _id: string;
    title: string | null;
    banner: string | null;
    bannerHorizontal: string | null;
    smedDescription: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    smedButton: {
        contentButton?: string;
        linktButton?: string;
    } | null;
}>;
export type HeaderQueryResult = {
    items: Array<{
        label: string | null;
        link: string | null;
    }> | null;
} | null;
export type HomePageEventsQueryResult = Array<{
    _id: string;
    title: string | null;
    shortDescription: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    address: string | null;
    schedule: Array<{
        date: string | null;
        startTime: string | null;
        endTime: string | null;
    }> | null;
    background: string | null;
}>;
export type HomePageQueryResult = {
    heroHeadline: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    heroDescription: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: never;
        markDefs?: Array<{
            href?: string;
            blank?: boolean;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    heroButtonTitle: string | null;
    heroButtonLink: string | null;
    heroImage: string | null;
    dividerText: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    titleLive: string | null;
    descriptionLive: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: "block";
        _key: string;
    }> | null;
    youtubeUrl: string | null;
    buttonLiveText: string | null;
    butonLiveLink: string | null;
    liveBannerImage: string | null;
} | null;
export type HomePageSermonsQueryResult = Array<{
    _id: string;
    title: string | null;
    date: string | null;
    slug: Slug | null;
    background: string | null;
    speaker: {
        name: string | null;
        titleAbbreviation: string | null;
        photo: string | null;
    } | null;
}>;
export type HomePageSmedsQueryResult = Array<{
    title: string | null;
    banner: string | null;
}>;
export type SermonSumaryPageQueryResult = Array<{
    _id: string;
    title: string | null;
    date: string | null;
    tags: Array<{
        _id: string;
        title: string | null;
    }> | null;
    slug: string | null;
    background: string | null;
    speaker: {
        name: string | null;
        titleAbbreviation: string | null;
        photo: string | null;
    } | null;
    allTags: Array<{
        _id: string;
        title: string | null;
    }>;
}>;
import "@sanity/client";
declare module "@sanity/client" {
    interface SanityQueries {
        "\n \n *[_type == \"ourSmedsPage\"][0]{  \n  title,\n  \"bannerImage\": bannerImage.asset->url,\n  description,\n  conclusion,\n}\n\n  ": SmedsPageQueryResult;
        "\n  *[_type == \"contactPage\"][0]{\n    _id,\n    title,\n    \"bannerImage\": bannerImage.asset->url,\n    description,\n    address-> {\n      street,\n      number,\n      district,\n      city,\n      state,\n      zip\n    },\n    \"phone\": phone->number,\n    \"email\": email->address,\n    \"DefaultSocial\": DefaultSocial->socialUserName,\n    \"DefaultSocialLink\": DefaultSocial->url,\n    \"whatsApp\": WhatsPhone->number,\n\n    AvailableHours\n  }": ContactPageQueryResult;
        "\n   *[_type == \"event\"]{\n    _id,  \n    title,\n      shortDescription,\n      \"address\":address->title,\n      schedule[0] {\n        date,\n        startTime,\n        endTime\n      },\n      \"background\": background.asset->url,\n  }\n": EventsPageQueryResult;
        "\n*[_type == \"sermonSummary\" && _id == $id][0] {\n _id,\n  \"allTags\": *[_type == \"sermonTag\"] {_id,title},\n  title,\n  date,\n  \"slug\": slug.current,\n  \"background\": background.asset->url,\n  \"speaker\": speaker->{\n    name,\n    birthDate,\n    title,\n    titleAbbreviation,\n    biography,\n    \"image\": photo.asset->url\n  },\n  \"tags\": tags[]->{\n    _id,\n    title\n  },\n  \"videoLink\": videoUrl,\n  content\n}\n": FindOneSermonByIdQueryResult;
        "\n *[_type == \"event\" && _id == $id][0] {\n  title,\n  about,\n  shortDescription,\n  \"address\": address->{\n    title,\n    street,\n    city,\n    state,\n    zip\n  },\n  \"banner\": banner.asset->url,\n  \"bannerMobile\": bannerMobile.asset->url,\n  \"eventColor\": eventColor.hex,\n  organizer {\n    description,\n    \"phone\": phone->{\n      number,\n      name\n    },\n    \"email\": email->{\n      address,\n      name\n    }\n  },\n  \"schedule\": schedule[]{\n    date,\n    startTime,\n    endTime,\n    sessions[]{\n      title,\n      description,\n      time\n    }\n  },\n  \"background\": background.asset->url,\n  \"speakers\": speakers[]->{\n    name,\n    birthDate,\n    title,\n    titleAbbreviation,\n    bio,\n    \"image\": photo.asset->url\n  },\n  teaser\n}\n": FindOneeventsByIdQueryResult;
        "*[_type == \"footer\"][0]{\n    \"logo\":logo.asset->url,\n    programmingTitle,\n    programmingText,\n    helpTitle,\n    \"helpPhone\": helpPhone->number,\n    locationTitle,\n    socialLinks[]-> {\n      \"_key\":_id,\n      url,\n      \"plataform\":type->title,\n      \"icon\": type->icon.asset->url\n      },\n    address-> {\n      street,\n      number,\n      district,\n      city,\n      state,\n      zip\n    },\n    mapEmbedUrl,\n  }": FooterQueryResult;
        "\n \n*[_type == \"smed\"] | order(_createdAt desc) {\n      _id,\n      title,\n      \"banner\": banner.asset->url,\n      \"bannerHorizontal\": bannerHorizontal.asset->url,\n      smedDescription,\n      smedButton\n    }\n  ": GetSmedListQueryResult;
        "\n  *[_type == \"header\"][0]{\n    items[]{\n      label,\n      link\n    }\n  }\n": HeaderQueryResult;
        "\n*[_type == \"event\" && schedule[0].date >= now()] | order(schedule[0].date asc)[0...3] {\n    _id,  \n    title,\n      shortDescription,\n      \"address\":address->title,\n      schedule[] {\n        date,\n        startTime,\n        endTime\n      },\n      \"background\": background.asset->url\n    }\n": HomePageEventsQueryResult;
        "\n *[_type == \"homePage\"][0]{\n    heroHeadline,\n    heroDescription,\n    heroButtonTitle,\n    heroButtonLink,\n    \"heroImage\": heroImage.asset->url,\n    dividerText,\n    titleLive,\n    descriptionLive,\n    youtubeUrl,\n    buttonLiveText,\n    butonLiveLink,\n    \"liveBannerImage\": liveBannerImage.asset->url,\n  }\n": HomePageQueryResult;
        "\n*[_type == \"sermonSummary\"] | order(date desc)[0...5] {\n      _id,\n      title,\n      date,\n      \"slug\": slug,\n      \"background\": background.asset->url,\n      speaker->{ name, titleAbbreviation, \"photo\":photo.asset->url}\n      \n    }\n  ": HomePageSermonsQueryResult;
        "\n *[_type == \"smed\"] | order(_createdAt desc) {\n      title,\n      \"banner\": banner.asset->url\n    }\n  ": HomePageSmedsQueryResult;
        "\n *[_type == \"sermonSummary\"] {\n   _id,   \n   title,\n   date,\n  tags[]->{_id,title},\n   \"slug\": slug.current,\n   \"background\": background.asset->url,\n   speaker->{ name, titleAbbreviation, \"photo\":photo.asset->url},\n   \"allTags\": *[_type == \"sermonTag\"] {_id,title}\n    }\n": SermonSumaryPageQueryResult;
    }
}
